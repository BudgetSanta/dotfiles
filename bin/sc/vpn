#!/usr/bin/env bash
set -euo pipefail

VPN_CONFIGS="$HOME/.vpn"
INITIAL_QUERY="${*:-}"

exe-req "gum" "rg"

main() {
    # Ensure VPN config file exists
    if [[ ! -f "$VPN_CONFIGS" ]]; then
        echo "VPN config file not found: $VPN_CONFIGS" >&2
        exit 1
    fi

    # Select config
    local config
    config=$(rg '(^#|^[ ]*$)' --invert-match < "$VPN_CONFIGS" \
        | gum filter \
            --placeholder "VPN Fuzzy Search" \
            --value="$INITIAL_QUERY" \
            --select-if-one)

    if [[ -z "$config" ]]; then
        echo "No VPN config selected." >&2
        exit 1
    fi

    config=${config//, /,}
    local env service type port
    IFS=',' read -r env service type port <<< "$config"

    # Login to AWS SSO if not already logged in
    if ! aws sts get-caller-identity &>/dev/null; then
        gum spin --spinner dot --title "Logging in to AWS SSO..." -- aws sso login
    fi

    local vpn_dir="$HOME/git/ed-infra-ssm-vpn"
    if [[ ! -d "$vpn_dir" ]]; then
        echo "VPN directory not found: $vpn_dir" >&2
        exit 1
    fi

    local service_type_suffix resource
    service_type_suffix=$([[ $type =~ ^(primary|writer)$ ]] && echo "-$type" || echo "")
    resource="$service$service_type_suffix"

    (
        cd "$vpn_dir"
        export LOCAL_PORT="$port"
        ./aws-connect.sh "$env" "$resource"
    )
}

main "$@"
