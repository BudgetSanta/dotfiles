#!/bin/bash

# Check if a rebase is in progress in the current git repository
is_rebase_in_progress() {
    local git_dir
    git_dir=$(git rev-parse --git-dir 2>/dev/null) || return 1
    [[ -d "$git_dir/rebase-merge" || -d "$git_dir/rebase-apply" ]]
}

if is_rebase_in_progress; then
    # Do not prompt for input during a rebase
    exit 0
fi

exe-req gum

TYPE=$(echo \
"build
chore
ci
docs
feat
fix
perf
refactor
revert
style
test" \
    |gum filter \
    --placeholder "Commit type...")

SCOPE=$(gum input  \
    --header "Scope" \
    --placeholder "(optional)" \
    --value "$(commit-key)")
test -n "$SCOPE" && SCOPE="($SCOPE)"

SUMMARY=$(gum input \
    --value "$TYPE$SCOPE: " \
    --placeholder "When merged, this commit will..." \
    --width 50)

DESCRIPTION=$(gum write \
    --placeholder "Details..." \
    --width 80)

# Word wrap DESCRIPTION at 80 characters per line
if [[ -n "$DESCRIPTION" ]]; then
    DESCRIPTION="\n\n$(echo "$DESCRIPTION" | fmt -w 70 | sed 's/^/\t/')"
fi

echo -e "$SUMMARY$DESCRIPTION"

